page.includeCSS.containerSection = {$containerSection.styles}
page.includeCSS.containerSection.inline = 1

["{$containerSection.fadeInContent}" == "1"]
  page.headerData {
    109991 = TEXT
    109991.value (
      <style>
        .frame { opacity: 0; transition: opacity .3s ease-in }
        .frame.isInViewport { opacity: 1 }
      </style>
    )
  }
[END]

page.includeJSFooterlibs.containerSection = {$containerSection.javaScript}

tt_content.containerSection =< lib.contentElement
tt_content.containerSection {
  templateRootPaths.10 = EXT:containeritems/Resources/Private/Templates/
  templateRootPaths.20 = {$containerSection.templateRootPaths}
  partialRootPaths.10 = EXT:containeritems/Resources/Private/Partials/
  partialRootPaths.20 = {$containerSection.partialRootPaths}
  dataProcessing.13 = B13\Container\DataProcessing\ContainerProcessor
  templateName = containerSection
  dataProcessing {
    13 = B13\Container\DataProcessing\ContainerProcessor
    20 = TYPO3\CMS\Frontend\DataProcessing\FilesProcessor
    20 {
      references.fieldName = assets
      as = assets
    }
  }
  variables {
    defaultAlignment = TEXT
    defaultAlignment.value = {$containerSection.defaultAlignment}
    sectionBgImage = FILES
    sectionBgImage  {
      begin = 0
      maxItems = 1
      references.fieldName = image
      renderObj = COA
      renderObj {
        # first get the image cropped and scaled
        5 = LOAD_REGISTER
        5.theImage.cObject = IMG_RESOURCE
        5.theImage.cObject.file {
          import.data = file:current:publicUrl
          crop.data = file:current:crop
          width = {$containerSection.bgImageWidth}
          width.override.field = tx_containeritems_s_bgimagewidth
        }
        # hack to remove / from path seems like a core bug
        7 = LOAD_REGISTER
        7.theImage.cObject = COA
        7.theImage.cObject {
          10 = TEXT
          10.value.data = REGISTER:theImage
          10.stdWrap.replacement {
            10.search = /fileadmin/
            10.replace = fileadmin/
          }
        }
        10 = IMG_RESOURCE
        10 {
          file = GIFBUILDER
          file {
            format = jpg
            quality = {$containerSection.bgImageQuality}
            XY = [5.w],[5.h]
            5 = IMAGE
            5.file.import.data = REGISTER:theImage

            # predefined image effects

            10 = SCALE
            10.params = -fill white -colorize 40%
            10.if.value = 10
            10.if.equals.field = tx_containeritems_s_bgimgeffect

            20 = SCALE
            20.params = -fill black -colorize 70%
            20.if.value = 20
            20.if.equals.field = tx_containeritems_s_bgimgeffect

            30 = SCALE
            30.params = -filter Gaussian -define filter:sigma=10
            30.if.value = 30
            30.if.equals.field = tx_containeritems_s_bgimgeffect

            40 = SCALE
            40.params = -filter Gaussian -define filter:sigma=20
            40.if.value = 40
            40.if.equals.field = tx_containeritems_s_bgimgeffect
          }
        }
      }
    }
  }
}
